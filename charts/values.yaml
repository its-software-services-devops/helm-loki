exposes:
  domain: example.com
  ingresses: []

grafana:
  enabled: false
  fullnameOverride: grafana-full-name
  lokiQueryUrl: http://loki-query-frontend:3100  
  sidecar:
    datasources:
      enabled: true
  image:
    tag: 7.5.0

  grafana.ini:
    auth:
      disable_signout_menu: false      
    auth.ldap:
      enabled: true
      allow_sign_up: true
    log:
      level: debug
    paths:
      provisioning: /etc/grafana/provisioning
      data: /var/lib/grafana/data
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
  ldap:
    enabled: false
    config: |
      verbose_logging = true

##### Promtail for Syslog purpose
promtail:
  enabled: false

fluentbit:
  enabled: false
  fullnameOverride: "fluentbit-k8s"
  logGatewayHost: ""
  logGatewayURI: /logs-push
  clusterName: ""
  project: ""
  platform: ""
  basicAuthUser: ""
  basicAuthPassword: ""
  port: 5514

  luaScripts:
    filters.lua: |
      function transform(tag, timestamp, record)
          if record["output"] then
              record["log"] = record["output"]
          end

          if record["msg"] then
              record["log"] = record["msg"]
          end          

          return 1, timestamp, record
      end

  config:
    ## https://docs.fluentbit.io/manual/pipeline/inputs
    # DO NOT PUT ANY BLANK LINES
    inputs: |
      [INPUT]
          Name tail
          Path /var/log/containers/*.log
          multiline.parser docker, cri
          Tag kube.*
          Mem_Buf_Limit 100MB
          Skip_Long_Lines On
          Refresh_Interval  5
          Buffer_Chunk_Size 128k
          Buffer_Max_Size   4096k
    ## https://docs.fluentbit.io/manual/pipeline/filters
    # DO NOT PUT ANY BLANK LINES
    filters: |
      [FILTER]
          Name kubernetes
          Match kube.*
          Merge_Log On
          Keep_Log Off
          Kube_URL         https://kubernetes.default.svc:443
          Kube_CA_File     /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          Kube_Token_File  /var/run/secrets/kubernetes.io/serviceaccount/token
          K8S-Logging.Parser On
          K8S-Logging.Exclude On
      [FILTER]
          Name                record_modifier
          Match               *
          Record hostname     {{ .Values.project }}
          Record facility     1
          Record severity     1
          Record appname      {{ .Values.platform }}:{{ .Values.project }}:{{ .Values.clusterName }}
          Record procid       1000
      [FILTER]
          name                  lua
          match                 *
          script                /fluent-bit/scripts/filters.lua
          call                  transform
    ## https://docs.fluentbit.io/manual/pipeline/outputs
    # DO NOT PUT ANY BLANK LINES
    outputs: |
      [OUTPUT]
          name                 syslog
          match                *
          # syslog.sec.devops.everapp.io
          host                 {{ .Values.logGatewayHost }}
          port                 {{ .Values.port }}
          mode                 udp
          syslog_format        rfc5424
          syslog_maxsize       502400
          syslog_hostname_key  hostname
          syslog_appname_key   appname
          syslog_sd_key        kubernetes
          syslog_message_key   log
          #syslog_severity_key  severity
          #syslog_facility_key  facility
          #syslog_procid_key    procid
          #syslog_msgid_key     msgid
    ## https://docs.fluentbit.io/manual/pipeline/parsers
    customParsers: |
      [PARSER]
          Name docker_no_time
          Format json
          Time_Keep Off
          Time_Key time
          Time_Format %Y-%m-%dT%H:%M:%S.%L
#####
loki-distributed:
  fullnameOverride: loki-syslog-log
  enabled: false

  distributor:
    replicas: 3

  gateway:
    replicas: 3
    basicAuth:
      enabled: true
      username: willchange
      password: willchangepwd

  customParams:
    backendStorageType: s3 #Support backend now are 's3' and 'gcs'
    s3User: willchange
    s3Password: willchangepwd
    s3Bucket: willchangepwdbb
    s3Url: https://minio.minio-applog-a.svc.cluster.local
    gcsBucket: gcsbucketnamehere
    gcsKeySecretName: loki-access-gcs-here

  ingester:
    replicas: 3
    persistence:
      enabled: true

  querier:
    replicas: 3
    persistence:
      enabled: true

  loki:    
    image:
      tag: 2.4.0
    config: |
        auth_enabled: false
        server:
          http_listen_port: 3100
        distributor:
          ring:
            kvstore:
              store: memberlist
        memberlist:
          join_members:
            - {{ include "loki.fullname" . }}-memberlist
        ingester:
          lifecycler:
            ring:
              kvstore:
                store: memberlist
              replication_factor: 1
          chunk_idle_period: 30m
          chunk_block_size: 262144
          chunk_encoding: snappy
          chunk_retain_period: 1m
          max_transfer_retries: 0
          wal:
            dir: /var/loki/wal
        limits_config:
          enforce_metric_name: false
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          max_cache_freshness_per_query: 10m
        schema_config:
          configs:
            - from: 2020-09-07
              store: boltdb-shipper
              {{- if (eq .Values.customParams.backendStorageType "s3") }}
              object_store: aws
              {{- else }}
              object_store: gcs
              {{- end }}
              schema: v11
              index:
                prefix: loki_index_
                period: 24h
        storage_config:
          {{- if (eq .Values.customParams.backendStorageType "s3") }}
          aws:
            s3: {{ .Values.customParams.s3Url }}/{{ .Values.customParams.s3Bucket }}
            s3forcepathstyle: true
            access_key_id: {{ .Values.customParams.s3User }}
            secret_access_key: {{ .Values.customParams.s3Password }}
            http_config:
              insecure_skip_verify: true
          {{- else }}
          gcs:
            bucket_name: {{ .Values.customParams.gcsBucket }}
          {{- end }}
          boltdb_shipper:
            active_index_directory: /var/loki/boltdb-shipper-active
            cache_location: /var/loki/boltdb-shipper-cache
            cache_ttl: 24h
            {{- if (eq .Values.customParams.backendStorageType "s3") }}
            shared_store: s3
            {{- else }}
            shared_store: gcs
            {{- end }}
        chunk_store_config:
          max_look_back_period: 0s
        table_manager:
          retention_deletes_enabled: false
          retention_period: 30m
        query_range:
          align_queries_with_step: true
          max_retries: 5
          split_queries_by_interval: 15m
          cache_results: true
          results_cache:
            cache:
              enable_fifocache: true
              fifocache:
                max_size_items: 1024
                validity: 24h
        frontend_worker:
          frontend_address: {{ include "loki.queryFrontendFullname" . }}:9095
        frontend:
          log_queries_longer_than: 5s
          compress_responses: true
          tail_proxy_url: http://{{ include "loki.querierFullname" . }}:3100

        compactor:
          {{- if (eq .Values.customParams.backendStorageType "s3") }}
          shared_store: aws
          {{- else }}
          shared_store: gcs
          {{- end }}

        ruler:
          storage:
            type: local
            local:
              directory: /etc/loki/rules
          ring:
            kvstore:
              store: memberlist
          rule_path: /tmp/loki/scratch
          alertmanager_url: {{ .Values.ruler.alertmanager_url }}
          external_url: {{ .Values.ruler.external_url }}

#####
loki-stack:
  enabled: false  

  grafana:
    enabled: true
    sidecar:
      datasources:
        enabled: true
    image:
      tag: 7.5.6

    grafana.ini:
      auth:
        disable_signout_menu: false      
      auth.ldap:
        enabled: true
        allow_sign_up: true
      log:
        level: debug
      paths:
        provisioning: /etc/grafana/provisioning
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins

    ldap:
      enabled: false #### CHANGE HERE ####
      config: |
        verbose_logging = true

        # To troubleshoot and get more log info enable ldap debug logging in grafana.ini
        [log]
        filters = "ldap:debug"

        [[servers]]
        # Ldap server host (specify multiple hosts space separated)
        host = "10.198.101.52"
        # Default port is 389 or 636 if use_ssl = true
        port = 389
        # Set to true if ldap server supports TLS
        use_ssl = false
        # Set to true if connect ldap server with STARTTLS pattern (create connection in insecure, then upgrade to secure connection with TLS)
        start_tls = false
        # set to true if you want to skip ssl cert validation
        ssl_skip_verify = false

        # Search user bind dn
        bind_dn = """CN=${LDAP_ADMIN_USER},OU=Services,OU=Users,OU=aaaaa,DC=aaaaa,DC=bbbbb"""
        # Search user bind password
        # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
        bind_password = """${LDAP_ADMIN_PASSWORD}"""

        # User search filter, for example "(cn=%s)" or "(sAMAccountName=%s)" or "(uid=%s)"
        search_filter = "(sAMAccountName=%s)"

        # An array of base dns to search through
        search_base_dns = ["OU=Users,OU=XXXXXX,DC=YYYYYYYY,DC=cccccc"]

        group_search_filter = "(objectClass=group)"
        group_search_filter_user_attribute = "DN"
        group_search_base_dns = ["OU=Groups,OU=XXXXXX,DC=YYYYYYYY,DC=cccccc"]

        # Specify names of the ldap attributes your ldap uses
        [servers.attributes]
        name = "name"
        surname = "sn"
        username = "sAMAccountName"
        member_of = "memberOf"
        email =  "email"

        [[servers.group_mappings]]
        group_dn = "cn=GROUP-NAME-HERE,ou=Team,ou=Groups,ou=YYYYYY,dc=xxxxxxx,dc=group"
        org_role = "Editor"

        [[servers.group_mappings]]
        # If you want to match all (or no ldap groups) then you can use wildcard
        group_dn = "*"
        org_role = "Viewer"
